// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Put your code here:
    //ax'y' + bx'y + cxy' + dxy
    Not(in = sel[0], out = notSel[0])
    Not(in = sel[1], out = notSel[1])
    And(a = notSel[0], b = notSel[1], out = mulA)
    And(a = notSel[0], b = sel[1], out = mulB)
    And(a = sel[0], b = notSel[1], out = mulC)
    And(a = sel[0], b = sel[1], out = mulD)
   
    And(a = a[0], b = mulA, out = A[0])
    And(a = a[1], b = mulA, out = A[1])
    And(a = a[2], b = mulA, out = A[2])
    And(a = a[3], b = mulA, out = A[3])
    And(a = a[4], b = mulA, out = A[4])
    And(a = a[5], b = mulA, out = A[5])
    And(a = a[6], b = mulA, out = A[6])
    And(a = a[7], b = mulA, out = A[7])
    And(a = a[8], b = mulA, out = A[8])
    And(a = a[9], b = mulA, out = A[9])
    And(a = a[10], b = mulA, out = A[10])
    And(a = a[11], b = mulA, out = A[11])
    And(a = a[12], b = mulA, out = A[12])
    And(a = a[13], b = mulA, out = A[13])
    And(a = a[14], b = mulA, out = A[14])
    And(a = a[15], b = mulA, out = A[15])

    And(a = b[0], b = mulB, out = B[0])
    And(a = b[1], b = mulB, out = B[1])
    And(a = b[2], b = mulB, out = B[2])
    And(a = b[3], b = mulB, out = B[3])
    And(a = b[4], b = mulB, out = B[4])
    And(a = b[5], b = mulB, out = B[5])
    And(a = b[6], b = mulB, out = B[6])
    And(a = b[7], b = mulB, out = B[7])
    And(a = b[8], b = mulB, out = B[8])
    And(a = b[9], b = mulB, out = B[9])
    And(a = b[10], b = mulB, out = B[10])
    And(a = b[11], b = mulB, out = B[11])
    And(a = b[12], b = mulB, out = B[12])
    And(a = b[13], b = mulB, out = B[13])
    And(a = b[14], b = mulB, out = B[14])
    And(a = b[15], b = mulB, out = B[15])

    And(a = c[0], b = mulC, out = C[0])
    And(a = c[1], b = mulC, out = C[1])
    And(a = c[2], b = mulC, out = C[2])
    And(a = c[3], b = mulC, out = C[3])
    And(a = c[4], b = mulC, out = C[4])
    And(a = c[5], b = mulC, out = C[5])
    And(a = c[6], b = mulC, out = C[6])
    And(a = c[7], b = mulC, out = C[7])
    And(a = c[8], b = mulC, out = C[8])
    And(a = c[9], b = mulC, out = C[9])
    And(a = c[10], b = mulC, out = C[10])
    And(a = c[11], b = mulC, out = C[11])
    And(a = c[12], b = mulC, out = C[12])
    And(a = c[13], b = mulC, out = C[13])
    And(a = c[14], b = mulC, out = C[14])
    And(a = c[15], b = mulC, out = C[15])

    And(a = d[0], b = mulD, out = D[0])
    And(a = d[1], b = mulD, out = D[1])
    And(a = d[2], b = mulD, out = D[2])
    And(a = d[3], b = mulD, out = D[3])
    And(a = d[4], b = mulD, out = D[4])
    And(a = d[5], b = mulD, out = D[5])
    And(a = d[6], b = mulD, out = D[6])
    And(a = d[7], b = mulD, out = D[7])
    And(a = d[8], b = mulD, out = D[8])
    And(a = d[9], b = mulD, out = D[9])
    And(a = d[10], b = mulD, out = D[10])
    And(a = d[11], b = mulD, out = D[11])
    And(a = d[12], b = mulD, out = D[12])
    And(a = d[13], b = mulD, out = D[13])
    And(a = d[14], b = mulD, out = D[14])
    And(a = d[15], b = mulD, out = D[15])

    Or16(a = A, b = B, out = AB)
    Or16(a = AB, b = C, out = ABC)
    Or16(a = ABC, b = D, out = out)
}
